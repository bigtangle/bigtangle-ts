
import { Buffer } from 'buffer';
import { BloomFilter } from '../../src/net/bigtangle/core/BloomFilter';
import { Utils } from '../../src/net/bigtangle/utils/Utils';

describe('BloomFilterTest', () => {
    test('insertSerializeTest', () => {
        const filter = new BloomFilter(
            3,
            0.01,
            0,
            BloomFilter.BloomUpdate.UPDATE_ALL,
        );

        filter.insert(Utils.HEX.decode('99108ad8ed9bb6274d3980bab5a85c048f0950c8'));
        expect(
            filter.contains(
                Utils.HEX.decode('99108ad8ed9bb6274d3980bab5a85c048f0950c8'),
            ),
        ).toBe(true);
        // One bit different in first byte
        expect(
            filter.contains(
                Utils.HEX.decode('19108ad8ed9bb6274d3980bab5a85c048f0950c8'),
            ),
        ).toBe(false);

        filter.insert(Utils.HEX.decode('b5a2c786d9ef4658287ced5914b37a1b4aa32eee'));
        expect(
            filter.contains(
                Utils.HEX.decode('b5a2c786d9ef4658287ced5914b37a1b4aa32eee'),
            ),
        ).toBe(true);

        filter.insert(Utils.HEX.decode('b9300670b4c5366e95b2699e8b18bc75e5f729c5'));
        expect(
            filter.contains(
                Utils.HEX.decode('b9300670b4c5366e95b2699e8b18bc75e5f729c5'),
            ),
        ).toBe(true);

        // Value generated by Bitcoin Core
        expect(
            Buffer.compare(
                Utils.HEX.decode('03614e9b050000000000000001'),
                filter.unsafeBitcoinSerialize(),
            ),
        ).toBe(0);
    });

    test('insertSerializeTestWithTweak', () => {
        const filter = new BloomFilter(3, 0.01, 2147483649);

        filter.insert(Utils.HEX.decode('99108ad8ed9bb6274d3980bab5a85c048f0950c8'));
        expect(
            filter.contains(
                Utils.HEX.decode('99108ad8ed9bb6274d3980bab5a85c048f0950c8'),
            ),
        ).toBe(true);
        // One bit different in first byte
        expect(
            filter.contains(
                Utils.HEX.decode('19108ad8ed9bb6274d3980bab5a85c048f0950c8'),
            ),
        ).toBe(false);

        filter.insert(Utils.HEX.decode('b5a2c786d9ef4658287ced5914b37a1b4aa32eee'));
        expect(
            filter.contains(
                Utils.HEX.decode('b5a2c786d9ef4658287ced5914b37a1b4aa32eee'),
            ),
        ).toBe(true);

        filter.insert(Utils.HEX.decode('b9300670b4c5366e95b2699e8b18bc75e5f729c5'));
        expect(
            filter.contains(
                Utils.HEX.decode('b9300670b4c5366e95b2699e8b18bc75e5f729c5'),
            ),
        ).toBe(true);

        // Value generated by Bitcoin Core
        expect(
            Buffer.compare(
                Utils.HEX.decode('03ce4299050000000100008002'),
                filter.unsafeBitcoinSerialize(),
            ),
        ).toBe(0);
    });
});
